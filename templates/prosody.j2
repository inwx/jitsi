-- Generated by ansible role: {{ role_name }}
plugin_paths = { "/usr/share/jitsi-meet/prosody-plugins/" }

admins = {
        "focus@auth.{{ jitsi_hostname }}",
        "jvb@auth.{{ jitsi_hostname }}"
}

http_default_host = "{{ jitsi_hostname }}"

-- domain mapper options, must at least have domain base set to use the mapper
muc_mapper_domain_base = "{{ jitsi_hostname }}";

turncredentials_secret = "{{ jitsi_turncredentials_secret }}";

turncredentials = {
  { type = "stun", host = "{{ jitsi_hostname }}", port = "4446" },
  { type = "turn", host = "{{ jitsi_hostname }}", port = "4446", transport = "udp" },
  { type = "turns", host = "{{ jitsi_hostname }}", port = "443", transport = "tcp" }
};

cross_domain_bosh = false;
consider_bosh_secure = true;

VirtualHost "{{ jitsi_hostname }}"
        -- enabled = false -- Remove this line to enable this host
{% if jitsi_authentication_enabled  %}
        authentication = "internal_hashed"
{% else %}
	authentication = "anonymous"
{% endif %}
        -- Properties below are modified by jitsi-meet-tokens package config
        -- and authentication above is switched to "token"
        -- app_id="jitsi"
        -- app_secret="secret"
        -- Assign this host a certificate for TLS, otherwise it would use the one
        -- set in the global section (if any).
        -- Note that old-style SSL on port 5223 only supports one certificate, and will always
        -- use the global one.
        ssl = {
                key = "/etc/prosody/certs/{{ jitsi_hostname }}.key";
                certificate = "/etc/prosody/certs/{{ jitsi_hostname }}.crt";
        }
        speakerstats_component = "speakerstats.{{ jitsi_hostname }}"
        conference_duration_component = "conferenceduration.{{ jitsi_hostname }}"
        -- we need bosh
        modules_enabled = {
            "bosh";
            "pubsub";
            "ping"; -- Enable mod_ping
            "speakerstats";
            "turncredentials";
            "conference_duration";
        }
        c2s_require_encryption = false

Component "conference.{{ jitsi_hostname }}" "muc"
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        --"token_verification";
    }
    admins = { "focus@auth.{{ jitsi_hostname }}" }
    muc_room_locking = false
    muc_room_default_public_jids = true

-- internal muc component
Component "internal.auth.{{ jitsi_hostname }}" "muc"
    storage = "memory"
    modules_enabled = {
      "ping";
    }
    muc_room_locking = false
    muc_room_default_public_jids = true

VirtualHost "auth.{{ jitsi_hostname }}"
    ssl = {
        key = "/etc/prosody/certs/auth.{{ jitsi_hostname }}.key";
        certificate = "/etc/prosody/certs/auth.{{ jitsi_hostname }}.crt";
    }
    authentication = "internal_plain"

Component "focus.{{ jitsi_hostname }}" "client_proxy"
    target_address = "focus@auth.{{ jitsi_hostname }}"
    component_secret = "{{ jitsi_jicofo_secret }}"

Component "speakerstats.{{ jitsi_hostname }}" "speakerstats_component"
    muc_component = "conference.{{ jitsi_hostname }}"

Component "conferenceduration.{{ jitsi_hostname }}" "conference_duration_component"
    muc_component = "conference.{{ jitsi_hostname }}"

{% if jitsi_authentication_enabled  %}
VirtualHost "guest.{{ jitsi_hostname }}"
    authentication = "anonymous"
    modules_enabled = {
      "turncredentials";
    }
    c2s_require_encryption = false
{% endif %}

{% if jitsi_jibri_enabled %}
VirtualHost "recorder.{{ jitsi_hostname }}"
    modules_enabled = {
      "ping";
    }
    authentication = "internal_hashed"
{% endif %}
